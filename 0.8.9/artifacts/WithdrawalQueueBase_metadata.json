{
	"compiler": {
		"version": "0.8.9+commit.e5eed63a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"name": "BatchesAreNotSorted",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CantSendValueRecipientMayHaveReverted",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "EmptyBatches",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_hint",
						"type": "uint256"
					}
				],
				"name": "InvalidHint",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_requestId",
						"type": "uint256"
					}
				],
				"name": "InvalidRequestId",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "startId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "endId",
						"type": "uint256"
					}
				],
				"name": "InvalidRequestIdRange",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidState",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "NotEnoughEther",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_sender",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_owner",
						"type": "address"
					}
				],
				"name": "NotOwner",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_requestId",
						"type": "uint256"
					}
				],
				"name": "RequestAlreadyClaimed",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_requestId",
						"type": "uint256"
					}
				],
				"name": "RequestNotFoundOrNotFinalized",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "sent",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "maxExpected",
						"type": "uint256"
					}
				],
				"name": "TooMuchEtherToFinalize",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ZeroAmountOfETH",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ZeroShareRate",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ZeroTimestamp",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "requestId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "receiver",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountOfETH",
						"type": "uint256"
					}
				],
				"name": "WithdrawalClaimed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "requestId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "requestor",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountOfStETH",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountOfShares",
						"type": "uint256"
					}
				],
				"name": "WithdrawalRequested",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "from",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "to",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountOfETHLocked",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "sharesToBurn",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					}
				],
				"name": "WithdrawalsFinalized",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "MAX_BATCHES_LENGTH",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_maxShareRate",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_maxTimestamp",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_maxRequestsPerCall",
						"type": "uint256"
					},
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "remainingEthBudget",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "finished",
								"type": "bool"
							},
							{
								"internalType": "uint256[36]",
								"name": "batches",
								"type": "uint256[36]"
							},
							{
								"internalType": "uint256",
								"name": "batchesLength",
								"type": "uint256"
							}
						],
						"internalType": "struct WithdrawalQueueBase.BatchesCalculationState",
						"name": "_state",
						"type": "tuple"
					}
				],
				"name": "calculateFinalizationBatches",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "remainingEthBudget",
								"type": "uint256"
							},
							{
								"internalType": "bool",
								"name": "finished",
								"type": "bool"
							},
							{
								"internalType": "uint256[36]",
								"name": "batches",
								"type": "uint256[36]"
							},
							{
								"internalType": "uint256",
								"name": "batchesLength",
								"type": "uint256"
							}
						],
						"internalType": "struct WithdrawalQueueBase.BatchesCalculationState",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getLastCheckpointIndex",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getLastFinalizedRequestId",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getLastRequestId",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getLockedEtherAmount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "_batches",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256",
						"name": "_maxShareRate",
						"type": "uint256"
					}
				],
				"name": "prefinalize",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "ethToLock",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "sharesToBurn",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "unfinalizedRequestNumber",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "unfinalizedStETH",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "folkyatina",
			"details": "Use an optimizations to store max share rates for finalized requests heavily inspired by Aragon MiniMe token https://github.com/aragon/aragon-minime/blob/master/contracts/MiniMeToken.sol",
			"events": {
				"WithdrawalRequested(uint256,address,address,uint256,uint256)": {
					"details": "Contains both stETH token amount and its corresponding shares amount"
				}
			},
			"kind": "dev",
			"methods": {
				"calculateFinalizationBatches(uint256,uint256,uint256,(uint256,bool,uint256[36],uint256))": {
					"params": {
						"_maxRequestsPerCall": "max request number that can be processed per call.",
						"_maxShareRate": "current share rate of the protocol (1e27 precision)",
						"_maxTimestamp": "max timestamp of the request that can be finalized",
						"_state": "structure that accumulates the state across multiple invocations to overcome gas limits.  To start calculation you should pass `state.remainingEthBudget` and `state.finished == false` and then invoke  the function with returned `state` until it returns a state with `finished` flag set"
					},
					"returns": {
						"_0": "state that is changing on each call and should be passed to the next call until `state.finished` is true"
					}
				},
				"prefinalize(uint256[],uint256)": {
					"params": {
						"_batches": "finalization batches calculated offchain using `calculateFinalizationBatches()`",
						"_maxShareRate": "max share rate that will be used for request finalization (1e27 precision)"
					},
					"returns": {
						"ethToLock": "amount of ether that should be sent with `finalize()` method",
						"sharesToBurn": "amount of shares that belongs to requests that will be finalized"
					}
				}
			},
			"stateVariables": {
				"CHECKPOINTS_POSITION": {
					"details": "finalization rate history, indexes start from 1"
				},
				"LAST_CHECKPOINT_INDEX_POSITION": {
					"details": "last index in checkpoints array"
				},
				"LAST_FINALIZED_REQUEST_ID_POSITION": {
					"details": "last index of finalized request in the queue"
				},
				"LAST_REPORT_TIMESTAMP_POSITION": {
					"details": "timestamp of the last oracle report"
				},
				"LAST_REQUEST_ID_POSITION": {
					"details": "last index in request queue"
				},
				"LOCKED_ETHER_AMOUNT_POSITION": {
					"details": "amount of eth locked on contract for further claiming"
				},
				"MAX_BATCHES_LENGTH": {
					"details": "maximal length of the batch array provided for prefinalization. See `prefinalize()`"
				},
				"NOT_FOUND": {
					"details": "return value for the `find...` methods in case of no result"
				},
				"QUEUE_POSITION": {
					"details": "queue for withdrawal requests, indexes (requestId) start from 1"
				},
				"REQUEST_BY_OWNER_POSITION": {
					"details": "withdrawal requests mapped to the owners"
				}
			},
			"title": "Queue to store and manage WithdrawalRequests.",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"calculateFinalizationBatches(uint256,uint256,uint256,(uint256,bool,uint256[36],uint256))": {
					"notice": "Offchain view for the oracle daemon that calculates how many requests can be finalized within the given budget, time period and share rate limits. Returned requests are split into batches. Each batch consist of the requests that all have the share rate below the `_maxShareRate` or above it. Below you can see an example how 14 requests with different share rates will be split into 5 batches by this method ^ share rate | |         • • |       •    •   • • • |----------------------•------ _maxShareRate |   •          •        • • • | • +-------------------------------> requestId  | 1st|  2nd  |3| 4th | 5th  |"
				},
				"getLastCheckpointIndex()": {
					"notice": "length of the checkpoint array. Last possible value for the hint.  NB! checkpoints are indexed from 1, so it returns 0 if there is no checkpoints"
				},
				"getLastFinalizedRequestId()": {
					"notice": "id of the last finalized request  NB! requests are indexed from 1, so it returns 0 if there is no finalized requests in the queue"
				},
				"getLastRequestId()": {
					"notice": "id of the last request  NB! requests are indexed from 1, so it returns 0 if there is no requests in the queue"
				},
				"getLockedEtherAmount()": {
					"notice": "amount of ETH on this contract balance that is locked for withdrawal and available to claim"
				},
				"prefinalize(uint256[],uint256)": {
					"notice": "Checks finalization batches, calculates required ether and the amount of shares to burn"
				},
				"unfinalizedRequestNumber()": {
					"notice": "return the number of unfinalized requests in the queue"
				},
				"unfinalizedStETH()": {
					"notice": "Returns the amount of stETH in the queue yet to be finalized"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/0.8.9/WithdrawalQueueBase.sol": "WithdrawalQueueBase"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts@v4.4/utils/structs/EnumerableSet.sol": {
			"keccak256": "0x9772845c886f87a3aab315f8d6b68aa599027c20f441b131cd4afaf65b588900",
			"license": "MIT",
			"urls": [
				"bzz-raw://ad2f29a9c17a4f746416c9e254e17671f43c409dbfa6e4d7d76c3e4a83212d31",
				"dweb:/ipfs/QmTqU65L6iu6yqmXKzcNLPioR8etzKPWycpDJCm17ifVdS"
			]
		},
		"contracts/0.8.9/WithdrawalQueueBase.sol": {
			"keccak256": "0xd3d6f1d97881fd8bf994016823de16380514adbafe57baebc10668aa9e156996",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://7588ba0a5727623bdde16802bcb7b60251cfeeef7df0e3f4afc9c5fc98d14971",
				"dweb:/ipfs/QmP6SrBgRdQY1Yko3BMboJvQpY8GN5szN2A6BDeyCySwo2"
			]
		},
		"contracts/0.8.9/lib/UnstructuredStorage.sol": {
			"keccak256": "0xe4bb1b1a3ecf62b15c386b8eec8418af1f1a0adc7038cc429e49d714c680bf3a",
			"license": "MIT",
			"urls": [
				"bzz-raw://0d7b1747879ffa8eac5041fad304f367998dce57f2ed6185c1baeb81c9df2195",
				"dweb:/ipfs/Qmckmnk7WgkKwMa4r6MXo2HnNfbNzUg4uvBJxyzrzjatZo"
			]
		}
	},
	"version": 1
}